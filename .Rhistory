base::sample(x, size = size, replace = replace)
else if(game_state$team_possession == 2) {
offense_roll = ruinf(1,1,offense_score(team_1,team_2,game_state))
defense_roll = runif(1,1,defense_score(team_1,team_2,game_state))
if (offense_roll > defense_roll) {
# Ball moves forward a sector
game_state$ball_in_sector = 4
if (runif(1,0,1) > OFFSIDE_PROB) {
# Offside penalty so team 2 gains possession
game_state$team_possession = 2
cat("Team 2  is offsides, team 1 now has the ball")
}
}
return(game_state)
}
# Probability constants from problem description
OFFSIDE_PROB = 0.15
lst_sample <- function(x, size, replace = F) {
if (length(x) == 1) return(rep(x, size))
base::sample(x, size = size, replace = replace)
}
debugSource("~/Downloads/F2021/MATH2820/lab/assignments/midterm/midterm_solution.R")
debugSource("~/Downloads/F2021/MATH2820/lab/assignments/midterm/midterm_solution.R")
debugSource("~/Downloads/F2021/MATH2820/lab/assignments/midterm/midterm_solution.R")
debugSource("~/Downloads/F2021/MATH2820/lab/assignments/midterm/midterm_solution.R")
debugSource("~/Downloads/F2021/MATH2820/lab/assignments/midterm/midterm_solution.R")
if (offense_roll > defense_roll) {
# Ball moves forward a sector
game_state$ball_in_sector = 4
if (runif(1,0,1) > OFFSIDE_PROB) {
# Offside penalty so team 2 gains possession
game_state$team_possession = 2
cat("Team 2  is offsides, team 1 now has the ball")
}
}
runif
runif
exit()
# Ball moves forward a sector
game_state$ball_in_sector = 4
game_state$goalie_with_ball = TRUE
game_state$team_possession = 2
fun = function(game_state) {
game_state$hi
}
cat(game_state$hi)
fun = function(game_state) {
cat(game_state$hi)
}
# Run a monte carlo simulation
monte_carlo_soccer <- function(N) {
# in theory we could run N simulations of the game here and give final prob
# in practice we don't need to for the assignment- 1 game loop is enough
game(minutes = 90)
}
monte_carlo_soccer();
cat("It's a goal on minute", i, "!!! The score is now", team_1$points_score, ":", team_2$points_score)
cat("It's a goal on minute", game_state$cur_min, "!!! The score is now", game_state$score[1], ":", game_state$score[2])
clear
clear()
#if successfully overtakes ball, change possession
if (defense_roll > offense_roll) {
if (game_state$team_possession == 1){
game_state$team_possession == 2
} else {
team_possession == 1
}
cat('Intercept after the kick, team ', game_state$team_possession,
' is now in possession')
}
game_state$cur_min = game_state$cur_min + 1
game_state$ball_in_sector = 4
return(game_state)
# Try a long shot
if (game_state$ball_in_sector == 3 & game_state$team_possession == 1 & runif(1,0,1) <= LONGSHOT_PROB) {
offensive_player = lst_sample(team1$player_number[team_1$sector == 3],1,T)
cat('Player ',offensive_player,' from team 1 takes a shot from sector 3')
# Offense gets a penalty of min of two rolls b/c its a long shot
offense_score = min(runif(2,1,team_1$offense_score[offense_player]))
defense_score = runif(1,1,GOALIE_SCORE)
if (offense_score > defense_score) {
game_state$score[1] = game_state$score[1] + 1
cat('Goal at minute ', game_state$cur_min, '!! The score is now ', game_state$score)
}
else {
cat("... and he misses. Team 2 is now in possession")
}
game_state$goalie_with_ball = TRUE
game_state$team_possession = 2
game_state$cur_min = game_state$cur_min + 1
game_state$ball_in_sector = 4
return(game_state)
}
# Otherwise try to pass the ball forward
else if (game_state$team_possession == 1) {
offense_roll = runif(1,1,offense_score(team_1,team_2,game_state))
defense_roll = runif(1,1,defense_score(team_1,team_2,game_state))
if (offense_roll > defense_roll) {
# Ball moves forward a sector
game_state$ball_in_sector = 4
if (runif(1,0,1) > OFFSIDE_PROB) {
# Offside penalty so team 2 gains possession
game_state$team_possession = 2
cat("Team 1  is offsides, team 2 now has the ball")
}
}
return(game_state)
}
